// Generated by view binder compiler. Do not edit!
package com.example.ufrpelogin.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ufrpelogin.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfessorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button button3;

  @NonNull
  public final Button button4;

  @NonNull
  public final Button buttonCadeiras;

  @NonNull
  public final Button buttonHorarios;

  @NonNull
  public final ImageView buttonVoltar;

  @NonNull
  public final TextView nomeProfessor;

  private ActivityProfessorBinding(@NonNull LinearLayout rootView, @NonNull Button button3,
      @NonNull Button button4, @NonNull Button buttonCadeiras, @NonNull Button buttonHorarios,
      @NonNull ImageView buttonVoltar, @NonNull TextView nomeProfessor) {
    this.rootView = rootView;
    this.button3 = button3;
    this.button4 = button4;
    this.buttonCadeiras = buttonCadeiras;
    this.buttonHorarios = buttonHorarios;
    this.buttonVoltar = buttonVoltar;
    this.nomeProfessor = nomeProfessor;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfessorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfessorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_professor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfessorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_3;
      Button button3 = ViewBindings.findChildViewById(rootView, id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.button_4;
      Button button4 = ViewBindings.findChildViewById(rootView, id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.button_cadeiras;
      Button buttonCadeiras = ViewBindings.findChildViewById(rootView, id);
      if (buttonCadeiras == null) {
        break missingId;
      }

      id = R.id.button_horarios;
      Button buttonHorarios = ViewBindings.findChildViewById(rootView, id);
      if (buttonHorarios == null) {
        break missingId;
      }

      id = R.id.button_voltar;
      ImageView buttonVoltar = ViewBindings.findChildViewById(rootView, id);
      if (buttonVoltar == null) {
        break missingId;
      }

      id = R.id.nome_professor;
      TextView nomeProfessor = ViewBindings.findChildViewById(rootView, id);
      if (nomeProfessor == null) {
        break missingId;
      }

      return new ActivityProfessorBinding((LinearLayout) rootView, button3, button4, buttonCadeiras,
          buttonHorarios, buttonVoltar, nomeProfessor);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
